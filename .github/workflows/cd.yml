name: Deploy production

on:
  push:
    branches: [ develop, production ]

jobs:
  get-environment-name: # [1]
    name: "Extract environment name"
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.extract.outputs.environment }}
    steps:
      - id: extract
        run: echo "::set-output name=environment::$(echo $GITHUB_REF | sed -e '/^refs\/heads\/\(.*\)$/!d;s//\1/')"

  deploy:
    name: "Deploy: ${{ needs.get-environment-name.outputs.environment }}"
    if: ${{ needs.get-environment-name.outputs.environment }}
    needs:
      - get-environment-name
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.get-environment-name.outputs.environment }}
    steps:
    - uses: actions/checkout@v2
    - name: Extract branch name
      shell: bash
      run: |
        echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
        echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $1}')" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install jq -y
    - name: Deliver to remote host
      env:
        DEPLOY_DIRECTORY: /home/${{secrets.DEPLOY_SERVER_USERNAME}}/environments
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_SERVER_HOST }}
        port: ${{ secrets.DEPLOY_SERVER_PORT }}
        username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          for s in $(echo '${{ toJSON(secrets) }}' | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" ); do
            export $s
          done

          cd ${{ env.DEPLOY_DIRECTORY }}

          if [ -d ${{ env.BRANCH_NAME }} ]; then
            cd ${{ env.BRANCH_NAME }}/${{ github.event.repository.name }}
            git pull
          else
            mkdir ${{ env.BRANCH_NAME }} && cd "$_"
            git clone ${{ secrets.REPO_SSH_URL }}
            cd ${{ github.event.repository.name }}
          fi

          git checkout ${{ env.BRANCH_NAME }}

          npm run prod:restart

# [1]. Took this brilliant solution from here: https://stackoverflow.com/a/65358831
# The idea is to take the name of the branch ("production") and dynamically pull off the relevant
# environment (which is also named "production" in the case). It prevents a lot of code duplication.
# Also it allows using environments feature instead of using only repo-level variables prefixed with
# "PRODUCTION_" or "DEVELOP_".
