name: CD

on:
  repository_dispatch:
    types: [start-deploying]

jobs:
  get-environment-name:
    name: "Extract environment name"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}
      - id: extract
        uses: alexey-sol/extract-environment-name@master
        with:
          github-ref: $GITHUB_REF
    outputs:
      environment: ${{ steps.extract.outputs.environment }}

  deploy:
    name: "Deploy: ${{ needs.get-environment-name.outputs.environment }}"
    if: ${{ needs.get-environment-name.outputs.environment }}
    needs:
      - get-environment-name
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.get-environment-name.outputs.environment }}
    steps:
    - name: Setup dependencies
      shell: bash
      run: |
        echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV
        echo "REPOSITORY_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $1}')" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install jq -y
    - name: Deliver to remote host
      env:
        DEPLOY_DIRECTORY: /home/${{secrets.DEPLOY_SERVER_USERNAME}}/environments
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_SERVER_HOST }}
        port: ${{ secrets.DEPLOY_SERVER_PORT }}
        username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          while read -rd $'' line # [1]
          do
            if [[ $s != DEPLOY_* ]]; then
              export "$line"
            fi
          done < <(jq -r <<< '${{ toJSON(secrets) }}' 'to_entries|map("\(.key)=\(.value)\u0000")[]')

          cd ${{ env.DEPLOY_DIRECTORY }}

          if [ -d ${{ env.BRANCH_NAME }} ]; then
            cd ${{ env.BRANCH_NAME }}/${{ github.event.repository.name }}
            git pull
          else
            mkdir ${{ env.BRANCH_NAME }} && cd "$_"
            git clone ${{ secrets.REPO_SSH_URL }}
            cd ${{ github.event.repository.name }}
          fi

          git checkout ${{ env.BRANCH_NAME }}

          npm run prod:restart

# [1]. Export all available secrets as environment variables automatically (excluding those which
# start with "DEPLOY_" prefix). https://stackoverflow.com/a/48513046/10874193
