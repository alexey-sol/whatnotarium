version: "3.3"

services:
    client:
        image: geek-regime_client:dev
        container_name: geek-regime_client_dev
        build:
            context: ./client
            dockerfile: ./builder/Dockerfile.development
        command: npm start
        volumes:
            - ./client:/app
            - /app/node_modules # [1]
        stdin_open: true
        environment:
            - CI=${CI}
            - HOST=${CLIENT_HOST}
            - PORT=${CLIENT_PORT}
            - NODE_ENV
            - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            - REACT_APP_GOOGLE_OAUTH_REDIRECT_URI=${GOOGLE_OAUTH_REDIRECT_URI}
            - REACT_APP_PROJECT_NAME_FULL=${PROJECT_NAME_FULL}
            - REACT_APP_PROJECT_NAME_SHORT=${PROJECT_NAME_SHORT}
            - REACT_APP_TINY_API_KEY=${TINY_API_KEY}
            - REACT_APP_YANDEX_CLIENT_ID=${YANDEX_CLIENT_ID}
    server:
        image: geek-regime_server:dev
        container_name: geek-regime_server_dev
        build:
            context: ./server
            dockerfile: ./builder/Dockerfile.development
        command: npm run dev
        volumes:
            - ./server:/app
            - /app/node_modules
    postgres:
        container_name: geek-regime_dev_postgres
    redis:
        container_name: geek-regime_dev_redis

# [1]. A trick which allows to exlude the host's node_modules from the container's app directory
# after attaching shared volume: https://stackoverflow.com/a/37898591
